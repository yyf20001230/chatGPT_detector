{"ast":null,"code":"var _jsxFileName = \"/Users/aberowe/Documents/coding/ie3_project/IE3-Frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function run() {\n  // Create a simple model.\n  const model = tf.sequential();\n  model.add(tf.layers.dense({\n    units: 1,\n    inputShape: [1]\n  }));\n\n  // Prepare the model for training: Specify the loss and the optimizer.\n  model.compile({\n    loss: 'meanSquaredError',\n    optimizer: 'sgd'\n  });\n\n  // Generate some synthetic data for training. (y = 2x - 1)\n  const xs = tf.tensor2d([-1, 0, 1, 2, 3, 4], [6, 1]);\n  const ys = tf.tensor2d([-3, -1, 1, 3, 5, 7], [6, 1]);\n\n  // Train the model using the data.\n  await model.fit(xs, ys, {\n    epochs: 250\n  });\n\n  // Use the model to do inference on a data point the model hasn't seen.\n  // Should print approximately 39.\n  document.getElementById('micro-out-div').innerText = model.predict(tf.tensor2d([20], [1, 1])).dataSync();\n}\nrun();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","run","model","tf","sequential","add","layers","dense","units","inputShape","compile","loss","optimizer","xs","tensor2d","ys","fit","epochs","document","getElementById","innerText","predict","dataSync","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/aberowe/Documents/coding/ie3_project/IE3-Frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nasync function run() {\n  // Create a simple model.\n  const model = tf.sequential();\n  model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\n  // Prepare the model for training: Specify the loss and the optimizer.\n  model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\n  // Generate some synthetic data for training. (y = 2x - 1)\n  const xs = tf.tensor2d([-1, 0, 1, 2, 3, 4], [6, 1]);\n  const ys = tf.tensor2d([-3, -1, 1, 3, 5, 7], [6, 1]);\n\n  // Train the model using the data.\n  await model.fit(xs, ys, {epochs: 250});\n\n  // Use the model to do inference on a data point the model hasn't seen.\n  // Should print approximately 39.\n  document.getElementById('micro-out-div').innerText =\n      model.predict(tf.tensor2d([20], [1, 1])).dataSync();\n}\n\nrun();\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAeC,GAAGA,CAAA,EAAG;EACnB;EACA,MAAMC,KAAK,GAAGC,EAAE,CAACC,UAAU,EAAE;EAC7BF,KAAK,CAACG,GAAG,CAACF,EAAE,CAACG,MAAM,CAACC,KAAK,CAAC;IAACC,KAAK,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC,CAAC;EAAC,CAAC,CAAC,CAAC;;EAEvD;EACAP,KAAK,CAACQ,OAAO,CAAC;IAACC,IAAI,EAAE,kBAAkB;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;;EAE3D;EACA,MAAMC,EAAE,GAAGV,EAAE,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnD,MAAMC,EAAE,GAAGZ,EAAE,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMZ,KAAK,CAACc,GAAG,CAACH,EAAE,EAAEE,EAAE,EAAE;IAACE,MAAM,EAAE;EAAG,CAAC,CAAC;;EAEtC;EACA;EACAC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,SAAS,GAC9ClB,KAAK,CAACmB,OAAO,CAAClB,EAAE,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACQ,QAAQ,EAAE;AACzD;AAEArB,GAAG,EAAE;AAEL,MAAMsB,IAAI,GAAG3B,QAAQ,CAAC4B,UAAU,CAACN,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEI,IAAI,CAACE,MAAM,eACTzB,OAAA,CAACL,KAAK,CAAC+B,UAAU;EAAAC,QAAA,eACf3B,OAAA,CAACH,GAAG;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAjC,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}